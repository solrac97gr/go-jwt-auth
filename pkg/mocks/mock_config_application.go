// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/solrac97gr/go-jwt-auth/pkg/config/domain/ports (interfaces: ConfigApplication)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/solrac97gr/go-jwt-auth/pkg/config/domain/models"
)

// MockConfigApplication is a mock of ConfigApplication interface.
type MockConfigApplication struct {
	ctrl     *gomock.Controller
	recorder *MockConfigApplicationMockRecorder
}

// MockConfigApplicationMockRecorder is the mock recorder for MockConfigApplication.
type MockConfigApplicationMockRecorder struct {
	mock *MockConfigApplication
}

// NewMockConfigApplication creates a new mock instance.
func NewMockConfigApplication(ctrl *gomock.Controller) *MockConfigApplication {
	mock := &MockConfigApplication{ctrl: ctrl}
	mock.recorder = &MockConfigApplicationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfigApplication) EXPECT() *MockConfigApplicationMockRecorder {
	return m.recorder
}

// Config mocks base method.
func (m *MockConfigApplication) Config() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Config")
	ret0, _ := ret[0].(error)
	return ret0
}

// Config indicates an expected call of Config.
func (mr *MockConfigApplicationMockRecorder) Config() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Config", reflect.TypeOf((*MockConfigApplication)(nil).Config))
}

// GetConfig mocks base method.
func (m *MockConfigApplication) GetConfig() (*models.Config, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConfig")
	ret0, _ := ret[0].(*models.Config)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetConfig indicates an expected call of GetConfig.
func (mr *MockConfigApplicationMockRecorder) GetConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfig", reflect.TypeOf((*MockConfigApplication)(nil).GetConfig))
}
