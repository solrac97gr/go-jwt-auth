// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/solrac97gr/go-jwt-auth/internal/user/domain/ports (interfaces: UserApplication)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/solrac97gr/go-jwt-auth/internal/user/domain/models"
)

// MockUserApplication is a mock of UserApplication interface.
type MockUserApplication struct {
	ctrl     *gomock.Controller
	recorder *MockUserApplicationMockRecorder
}

// MockUserApplicationMockRecorder is the mock recorder for MockUserApplication.
type MockUserApplicationMockRecorder struct {
	mock *MockUserApplication
}

// NewMockUserApplication creates a new mock instance.
func NewMockUserApplication(ctrl *gomock.Controller) *MockUserApplication {
	mock := &MockUserApplication{ctrl: ctrl}
	mock.recorder = &MockUserApplicationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserApplication) EXPECT() *MockUserApplicationMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockUserApplication) Create(arg0 *models.RegisterRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockUserApplicationMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockUserApplication)(nil).Create), arg0)
}

// Login mocks base method.
func (m *MockUserApplication) Login(arg0 *models.AuthRequest) (*models.AuthResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Login", arg0)
	ret0, _ := ret[0].(*models.AuthResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Login indicates an expected call of Login.
func (mr *MockUserApplicationMockRecorder) Login(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Login", reflect.TypeOf((*MockUserApplication)(nil).Login), arg0)
}
