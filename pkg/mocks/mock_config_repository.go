// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/solrac97gr/go-jwt-auth/pkg/config/domain/ports (interfaces: ConfigRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	os "os"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockConfigRepository is a mock of ConfigRepository interface.
type MockConfigRepository struct {
	ctrl     *gomock.Controller
	recorder *MockConfigRepositoryMockRecorder
}

// MockConfigRepositoryMockRecorder is the mock recorder for MockConfigRepository.
type MockConfigRepositoryMockRecorder struct {
	mock *MockConfigRepository
}

// NewMockConfigRepository creates a new mock instance.
func NewMockConfigRepository(ctrl *gomock.Controller) *MockConfigRepository {
	mock := &MockConfigRepository{ctrl: ctrl}
	mock.recorder = &MockConfigRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfigRepository) EXPECT() *MockConfigRepositoryMockRecorder {
	return m.recorder
}

// GetConfigFile mocks base method.
func (m *MockConfigRepository) GetConfigFile() (*os.File, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConfigFile")
	ret0, _ := ret[0].(*os.File)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetConfigFile indicates an expected call of GetConfigFile.
func (mr *MockConfigRepositoryMockRecorder) GetConfigFile() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfigFile", reflect.TypeOf((*MockConfigRepository)(nil).GetConfigFile))
}
